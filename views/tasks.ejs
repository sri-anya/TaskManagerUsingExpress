<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Task Manager</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

</head>

<body>
  <!-- NavBar -->
  <nav class="navbar bg-body-tertiary">
    <div class="container-fluid">
      <a href="/" class="navbar-brand">Task Manager</a>
      <form class="d-flex" role="search">
        <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
        <button class="btn btn-outline-success" type="submit">Search</button>
      </form>
    </div>
  </nav>
  <!-- Add new task -->

  <div class="newTask" style="width:50%; margin:auto; padding-top: 45px; text-align: center;">
    <h1>Add a new Task</h1>
    <form id="newTaskForm">
      <div class="form-floating my-2">
        <textarea class="form-control" placeholder="taskName" name="taskName" id="taskName"></textarea>
        <label for="taskName">Task Title</label>
      </div>
      <div class="form-floating my-2">
        <textarea class="form-control" placeholder="description" name="description" id="description"
          style="height: 100px"></textarea>
        <label for="description">Description</label>
      </div>
      <div class="form-floating my-2">
        <input class="form-control" type="date" id="dueDate" name="dueDate" value="2024-02-08" min="2024-02-08"
          max="2024-12-31" />
        <label for="dueDate">Due Date</label>
      </div>
      <div class="submitButton my-4">
        <button class="btn btn-primary" id="submit" type="submit">Submit Task</button>
      </div>
    </form>
  </div>




  <hr>
  <!-- CardContainer -->
  <div class="taskContainer" style="text-align: center;">
    <h1>Tasks</h1>
    <ul class="list-group" id="taskList" style="margin:20px;">

      <% tasks.forEach(element=> { %>

        <li class="list-group-item" style="display: flex; justify-content:space-around" id="<%=element.id%>">
          <input class="form-check-input me-1" type="checkbox" value="">
          <label class="form-check-label" for="<%=element.id%>">
            <%= element.taskName %>
          </label>
          <label class="form-check-label" for="<%=element.description%>">
            <%= element.description%>
          </label>
          <label class="form-check-label" for="<%=element.dueDate%>">
            <%= element.dueDate%>
          </label>
          <button type="button" style="display:block" class="btn btn-danger" onclick="document.getElementById(`<%=element.id%>`).style.display = 'none';
              fetch(`http://localhost:3000/<%=element.id%>`, {
                  method: 'DELETE'})
                  .then(res => res.text()) // or res.json()
                  .then(res => console.log(res))
              " </button>Delete</button>
        </li>

        <% }) %>



    </ul>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.1/axios.min.js"></script>
  <script>

    console.log("script")
    const taskList = document.getElementById('taskList');

    function deleteTask(taskId) {
      console.log(`taskTobe deleted: ${document.getElementById(taskId)}`)
    document.getElementById(taskId).style.display = 'none';

    fetch(`http://localhost:3000/${taskId}`, {
      method: 'DELETE'
    })
    .then(res => res.text())
    .then(res => console.log(res))
    .catch(error => console.error('Error deleting task:', error));
  }

    // Function to fetch and display tasks
    const fetchTasks = (task) => {
      
        // const response = await axios.get('/tasks');
        // console.log(`response: ${response.body}`)
        // const tasks = response.data;
        // console.log(`tasks: ${response.body}`)

        // Clear existing tasks
        taskList.innerHTML +=`<li class="list-group-item" style="display: flex; justify-content: space-around" id="${task.id}">
                    <input class="form-check-input me-1" type="checkbox" value="">
          <label class="form-check-label" for="${task.id}">
            ${task.taskName}
          </label>
          <label class="form-check-label" for="${task.description}">
            ${task.description}
          </label>
          <label class="form-check-label" for="${task.dueDate}">
            ${task.dueDate}
          </label>
          <button type="button" style="display:block" class="btn btn-danger" onclick="deleteTask('${task.id}')"</button>Delete</button>
          </li>
          
          `;
      
      
      
    };

    document.getElementById("newTaskForm").addEventListener("submit", async (e) => {
      e.preventDefault()
      console.log(e.target.taskName.value)
      const taskData = {
        taskName: document.getElementById('taskName').value,
        description: document.getElementById('description').value,
        dueDate: document.getElementById('dueDate').value,
      };
      try {
        // Send a POST request to create a new task
        await axios.post('/', taskData);

        // Fetch and display updated tasks

        fetchTasks(taskData);

        // Reset the form after submit
        document.getElementById("newTaskForm").reset()

      } catch (error) {
        console.error('Error creating task:', error);
      }

    })
  </script>

</body>

</html>